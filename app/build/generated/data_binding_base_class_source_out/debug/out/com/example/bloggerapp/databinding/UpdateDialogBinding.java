// Generated by view binder compiler. Do not edit!
package com.example.bloggerapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.bloggerapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class UpdateDialogBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final EditText bAuthor;

  @NonNull
  public final EditText bDesc;

  @NonNull
  public final EditText bTittle;

  @NonNull
  public final TextView btnPublish;

  @NonNull
  public final TextView textView3;

  @NonNull
  public final View view;

  private UpdateDialogBinding(@NonNull CardView rootView, @NonNull EditText bAuthor,
      @NonNull EditText bDesc, @NonNull EditText bTittle, @NonNull TextView btnPublish,
      @NonNull TextView textView3, @NonNull View view) {
    this.rootView = rootView;
    this.bAuthor = bAuthor;
    this.bDesc = bDesc;
    this.bTittle = bTittle;
    this.btnPublish = btnPublish;
    this.textView3 = textView3;
    this.view = view;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static UpdateDialogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static UpdateDialogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.update_dialog, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static UpdateDialogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.b_author;
      EditText bAuthor = ViewBindings.findChildViewById(rootView, id);
      if (bAuthor == null) {
        break missingId;
      }

      id = R.id.b_desc;
      EditText bDesc = ViewBindings.findChildViewById(rootView, id);
      if (bDesc == null) {
        break missingId;
      }

      id = R.id.b_tittle;
      EditText bTittle = ViewBindings.findChildViewById(rootView, id);
      if (bTittle == null) {
        break missingId;
      }

      id = R.id.btn_publish;
      TextView btnPublish = ViewBindings.findChildViewById(rootView, id);
      if (btnPublish == null) {
        break missingId;
      }

      id = R.id.textView3;
      TextView textView3 = ViewBindings.findChildViewById(rootView, id);
      if (textView3 == null) {
        break missingId;
      }

      id = R.id.view;
      View view = ViewBindings.findChildViewById(rootView, id);
      if (view == null) {
        break missingId;
      }

      return new UpdateDialogBinding((CardView) rootView, bAuthor, bDesc, bTittle, btnPublish,
          textView3, view);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
