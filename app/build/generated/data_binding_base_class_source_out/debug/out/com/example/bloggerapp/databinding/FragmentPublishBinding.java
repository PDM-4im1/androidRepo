// Generated by view binder compiler. Do not edit!
package com.example.bloggerapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.bloggerapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentPublishBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final EditText bauthor;

  @NonNull
  public final EditText bdesc;

  @NonNull
  public final TextView bselectImage;

  @NonNull
  public final EditText btittle;

  @NonNull
  public final TextView btnpublish;

  @NonNull
  public final ImageView imgthumbnail;

  @NonNull
  public final TextView textView3;

  @NonNull
  public final View view;

  @NonNull
  public final View view2;

  private FragmentPublishBinding(@NonNull NestedScrollView rootView, @NonNull EditText bauthor,
      @NonNull EditText bdesc, @NonNull TextView bselectImage, @NonNull EditText btittle,
      @NonNull TextView btnpublish, @NonNull ImageView imgthumbnail, @NonNull TextView textView3,
      @NonNull View view, @NonNull View view2) {
    this.rootView = rootView;
    this.bauthor = bauthor;
    this.bdesc = bdesc;
    this.bselectImage = bselectImage;
    this.btittle = btittle;
    this.btnpublish = btnpublish;
    this.imgthumbnail = imgthumbnail;
    this.textView3 = textView3;
    this.view = view;
    this.view2 = view2;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentPublishBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentPublishBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_publish, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentPublishBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bauthor;
      EditText bauthor = ViewBindings.findChildViewById(rootView, id);
      if (bauthor == null) {
        break missingId;
      }

      id = R.id.bdesc;
      EditText bdesc = ViewBindings.findChildViewById(rootView, id);
      if (bdesc == null) {
        break missingId;
      }

      id = R.id.bselectImage;
      TextView bselectImage = ViewBindings.findChildViewById(rootView, id);
      if (bselectImage == null) {
        break missingId;
      }

      id = R.id.btittle;
      EditText btittle = ViewBindings.findChildViewById(rootView, id);
      if (btittle == null) {
        break missingId;
      }

      id = R.id.btnpublish;
      TextView btnpublish = ViewBindings.findChildViewById(rootView, id);
      if (btnpublish == null) {
        break missingId;
      }

      id = R.id.imgthumbnail;
      ImageView imgthumbnail = ViewBindings.findChildViewById(rootView, id);
      if (imgthumbnail == null) {
        break missingId;
      }

      id = R.id.textView3;
      TextView textView3 = ViewBindings.findChildViewById(rootView, id);
      if (textView3 == null) {
        break missingId;
      }

      id = R.id.view;
      View view = ViewBindings.findChildViewById(rootView, id);
      if (view == null) {
        break missingId;
      }

      id = R.id.view2;
      View view2 = ViewBindings.findChildViewById(rootView, id);
      if (view2 == null) {
        break missingId;
      }

      return new FragmentPublishBinding((NestedScrollView) rootView, bauthor, bdesc, bselectImage,
          btittle, btnpublish, imgthumbnail, textView3, view, view2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
